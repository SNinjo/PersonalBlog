{"version":3,"file":"component---src-pages-404-index-tsx-60aeb335d34c5e7cc41d.js","mappings":"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","sources":["webpack://blog/./src/components/Navigation/index.module.scss","webpack://blog/./src/components/Navigation/index.tsx","webpack://blog/./src/components/SEO/index.tsx","webpack://blog/./src/pages/404/index.tsx","webpack://blog/./src/pages/404/index.module.scss","webpack://blog/./src/tools/Language/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var img = \"index-module--img--50e58\";\nexport var link = \"index-module--link--490a4\";\nexport var nav = \"index-module--nav--287f4\";","import React, { FC } from 'react';\r\nimport { Link, useStaticQuery, graphql, navigate } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport { language, getLanguage } from '../../tools/Language';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype QueriedData = {\r\n    site: {\r\n        siteMetadata: {\r\n            languages: Array<language>\r\n        }\r\n    }\r\n}\r\n\r\ntype iProps = {\r\n    currentPath: string\r\n}\r\nconst Navigation: FC<iProps> = ({ currentPath }) => {\r\n    const { site }: QueriedData = useStaticQuery(graphql`\r\n        query Navigation {\r\n            site {\r\n                siteMetadata {\r\n                    languages {\r\n                        id\r\n                        name\r\n                        path\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const languages = site.siteMetadata.languages;\r\n\r\n    const navigateTo = (fromLanguagePath: string, toLanguagePath: string) => {\r\n        navigate( currentPath.replace(new RegExp(`\\/${fromLanguagePath}\\/?$`), `\\/${toLanguagePath}`) );\r\n    }\r\n\r\n\r\n    return (\r\n        <nav\r\n            className={style.nav}\r\n        >\r\n            <Link\r\n                to='/'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/blog.png'\r\n                    alt='blog logo'\r\n                    title='SNinjo Blog'\r\n                    loading='eager'\r\n                />\r\n            </Link>\r\n            <a\r\n                href='https://SNinjo.com'\r\n                target='_blank'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/sninjo.png'\r\n                    alt='SNinjo logo'\r\n                    title='SNinjo Personal Website'\r\n                    loading='eager'\r\n                />\r\n            </a>\r\n            <a\r\n                href='https://SNinjo.com/contact'\r\n                target='_blank'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/email.png'\r\n                    alt='contact icon'\r\n                    title='Contact Information'\r\n                    loading='eager'\r\n                />\r\n            </a>\r\n\r\n            <select\r\n                defaultValue={getLanguage(currentPath, languages).path}\r\n\r\n                onChange={  event => navigateTo(getLanguage(currentPath, languages).path, event.target.value)  }\r\n            >\r\n                {\r\n                    languages.map((language, index) => (\r\n                        <option\r\n                            key={`Language${index}`}\r\n                            value={language.path}\r\n                        >\r\n                            {language.name}\r\n                        </option>\r\n                    ))\r\n                }\r\n            </select>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navigation;","import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype iProps = {\r\n    pathname: string\r\n}\r\nconst SEO: FC<iProps> = ({ pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title, description, author, imagePath, siteUrl } = site.siteMetadata;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            {/* <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title> */}\r\n            {/* <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\" /> */}\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={title} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","import React, { FC } from 'react';\r\nimport { PageProps } from 'gatsby';\r\n\r\nimport Navigation from '../../components/Navigation';\r\nimport SEO from 'components/SEO';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst NotFoundPage: FC<PageProps> = ({ location }) => {\r\n    return (\r\n        <div\r\n            className={style.div}\r\n        >\r\n            <div>\r\n                <p>Sorry... There are nothing here.</p>\r\n                <p>If you want to read about other topics, please contact me.</p>\r\n\r\n                <section>\r\n                    <Navigation\r\n                        currentPath={location.pathname}\r\n                    />\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFoundPage;\r\n\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n    <SEO\r\n        pathname={location.pathname}\r\n    />\r\n)","// extracted by mini-css-extract-plugin\nexport var div = \"index-module--div--f7148\";","export type language = {\r\n    id: string,\r\n    name: string,\r\n    path: string,\r\n    contents: string,\r\n}\r\n\r\nexport function getLanguage(path: string, languages: Array<language>): language {\r\n    let defaultLanguage: language;\r\n    for (const language of languages) {\r\n        if (  !language.id || !language.path && (language.path !== '')  ) throw Error('Language configuration error, please add \"id\" and \"path\" in graphql')\r\n\r\n        if (language.id === 'en') defaultLanguage = language;\r\n        else if (path.match(new RegExp(`\\/${language.path}\\/?$`))) return language;\r\n    }\r\n    return defaultLanguage!;\r\n}"],"names":["img","_ref","currentPath","site","useStaticQuery","languages","siteMetadata","React","className","Link","to","style","StaticImage","src","alt","title","loading","href","target","defaultValue","getLanguage","path","onChange","event","navigateTo","fromLanguagePath","toLanguagePath","value","navigate","replace","RegExp","map","language","index","key","name","pathname","description","author","imagePath","siteUrl","url","image","rel","content","location","Navigation","Head","_ref2","SEO","defaultLanguage","id","Error","match"],"sourceRoot":""}