{"version":3,"file":"component---src-pages-index-tsx-f54d419f9862b8b08cc4.js","mappings":"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","sources":["webpack://SNinjo Blog/./src/components/Copyright/index.tsx","webpack://SNinjo Blog/./src/components/Copyright/index.module.scss","webpack://SNinjo Blog/./src/components/SEO/index.tsx","webpack://SNinjo Blog/./src/pages/index.tsx","webpack://SNinjo Blog/./src/pages/index.module.scss","webpack://SNinjo Blog/./src/tools/Language/index.ts"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { Link, useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport { language, getLanguage } from '../../tools/Language';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype QueriedData = {\r\n    site: {\r\n        siteMetadata: {\r\n            languages: Array<language>\r\n        }\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    currentPath: string\r\n}\r\nconst Copyright: FC<Props> = ({ currentPath }) => {\r\n    const { site }: QueriedData = useStaticQuery(graphql`\r\n        query Copyright {\r\n            site {\r\n                siteMetadata {\r\n                    languages {\r\n                        id\r\n                        name\r\n                        path\r\n\t\t\t\t\t\tcopyright\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const languages = site.siteMetadata.languages;\r\n\r\n    return (\r\n        <Link\r\n            to={`/Preface/Copyright${getLanguage(currentPath, languages).path}`}\r\n            className={style.link}\r\n        >\r\n            <p>{getLanguage(currentPath, languages).copyright}</p>\r\n        </Link>\r\n    )\r\n}\r\nexport default Copyright;","// extracted by mini-css-extract-plugin\nexport var link = \"index-module--link--288ba\";","import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\n\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}/${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","import React, { FC } from 'react';\r\nimport { Link, PageProps } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport Layout from 'components/Layout';\r\nimport Copyright from 'components/Copyright';\r\nimport SEO from 'components/SEO';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst IndexPage: FC<PageProps> = ({ location }) => {\r\n    return (\r\n        <Layout\r\n            language='en'\r\n        >\r\n            <Link\r\n                to='/contents'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.icon}\r\n                    src='../images/blog.png'\r\n                    alt='blog logo'\r\n                    loading='eager'\r\n                />\r\n                <h1>SNinjo Blog</h1>\r\n                <span> &gt; click to enter the blog &lt; </span>\r\n            </Link>\r\n\t\t\t<div\r\n\t\t\t\tclassName={style.copyright}\r\n\t\t\t>\r\n\t\t\t\t<Copyright\r\n\t\t\t\t\tcurrentPath={location.pathname}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n        </Layout>\r\n    )\r\n}\r\nexport default IndexPage;\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n    <SEO\r\n        pathname={location.pathname}\r\n    />\r\n)","// extracted by mini-css-extract-plugin\nexport var breathe = \"index-module--breathe--bc10c\";\nexport var copyright = \"index-module--copyright--e0533\";\nexport var icon = \"index-module--icon--a2d1d\";\nexport var link = \"index-module--link--9ea51\";","export type language = {\r\n    id: string,\r\n    name: string,\r\n    path: string,\r\n    contents: string,\r\n\theadline: string,\r\n\tcopyright: string,\r\n    notMatch: string,\r\n}\r\n\r\nexport function getLanguage(path: string, languages: Array<language>): language {\r\n    let defaultLanguage: language;\r\n    for (const language of languages) {\r\n        if (  !language.id || !language.path && (language.path !== '')  ) throw Error('Language configuration error, please add \"id\" and \"path\" in graphql')\r\n\r\n        if (language.id === 'en') defaultLanguage = language;\r\n        else if (path.match(new RegExp(`${language.path}$`))) return language;\r\n    }\r\n    return defaultLanguage!;\r\n}"],"names":["_ref","currentPath","site","useStaticQuery","languages","siteMetadata","React","Link","to","getLanguage","path","className","copyright","title","subtitle","pathname","mainTitle","description","author","image","imagePath","siteUrl","url","rel","href","name","content","location","Layout","language","StaticImage","src","alt","loading","__imageData","Copyright","Head","_ref2","SEO","defaultLanguage","id","Error","match","RegExp"],"sourceRoot":""}