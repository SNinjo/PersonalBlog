{"version":3,"file":"component---src-pages-index-tsx-076541baebed12edcbdb.js","mappings":"uKAgBA,MAVkB,IAEVA,EAAAA,cAACC,EAAAA,KAAI,CACDC,GAAG,qBACHC,UCTM,6BDWNH,EAAAA,cAAAA,IAAAA,KAAG,qC,+CEyCf,IA5CuBI,IAAoC,IAAjCC,MAAOC,EAAQ,SAAEC,GAAU,EACjD,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,eAaxBJ,MAAOK,EAAS,YAAEC,EAAW,OAAEC,EAAQC,MAAOC,EAAS,QAAEC,GAAYP,EAAKQ,aAC5EX,GAAWC,EAAaA,EAAQ,MAAQ,IAAKI,EAC7CO,EAAG,GAAMF,EAAUR,EACnBM,EAAK,GAAME,EAAUD,EAG3B,OACId,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,KAAQK,GACRL,EAAAA,cAAAA,OAAAA,CAAMkB,IAAI,YAAYC,KAAMF,IAE5BjB,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,cAAcC,QAASV,IAClCX,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,QAAQC,QAASR,IAE5Bb,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,WAAWC,QAAShB,IAC/BL,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,iBAAiBC,QAASV,IACrCX,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,WAAWC,QAASR,IAC/Bb,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,UAAUC,QAAQ,YAC7BrB,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,SAASC,QAASJ,IAC7BjB,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,eAAeC,QAASX,IAEnCV,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,eAAeC,QAAQ,wBAClCrB,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,gBAAgBC,QAAShB,IACpCL,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,cAAcC,QAASJ,IAClCjB,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,sBAAsBC,QAASV,IAC1CX,EAAAA,cAAAA,OAAAA,CAAMoB,KAAK,gBAAgBC,QAASR,IAErC,C,oJCnBX,MArBsB,IAEdb,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAACC,EAAAA,KAAI,CACDC,GAAG,YACHC,UCbE,6BDeFH,EAAAA,cAACsB,EAAAA,EAAW,CACRnB,UCjBF,4BDkBEoB,IAAI,qBACJC,IAAI,YACJC,QAAQ,QAAOC,YAAAA,EAAAA,QAEnB1B,EAAAA,cAAAA,KAAAA,KAAI,eACJA,EAAAA,cAAAA,OAAAA,KAAM,kCAGVA,EAAAA,cAAC2B,EAAAA,EAAS,OAMf,MAAMC,EAAsBxB,IAAA,IAAC,SAAEyB,GAAU,SAC5C7B,EAAAA,cAAC8B,EAAAA,EAAG,CACAvB,SAAUsB,EAAStB,UACrB,C","sources":["webpack://SNinjo Blog/./src/components/Copyright/index.tsx","webpack://SNinjo Blog/./src/components/Copyright/index.module.scss","webpack://SNinjo Blog/./src/components/SEO/index.tsx","webpack://SNinjo Blog/./src/pages/index.tsx","webpack://SNinjo Blog/./src/pages/index.module.scss"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Link\r\n            to='/Preface/Copyright'\r\n            className={style.link}\r\n        >\r\n            <p>SNinjo 2023 Â© all rights reserved</p>\r\n        </Link>\r\n    )\r\n}\r\nexport default Copyright;","// extracted by mini-css-extract-plugin\nexport var link = \"index-module--link--288ba\";","import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\n\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","import React, { FC } from 'react';\r\nimport { Link, PageProps } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport Copyright from 'components/Copyright';\r\nimport SEO from 'components/SEO';\r\nimport * as style from './index.module.scss';\r\nimport 'global.scss';\r\n\r\n\r\nconst IndexPage: FC = () => {\r\n    return (\r\n        <>\r\n            <Link\r\n                to='/contents'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.icon}\r\n                    src='../images/blog.png'\r\n                    alt='blog logo'\r\n                    loading='eager'\r\n                />\r\n                <h1>SNinjo Blog</h1>\r\n                <span> &gt; click to enter the blog &lt; </span>\r\n            </Link>\r\n            \r\n            <Copyright />\r\n        </>\r\n    )\r\n}\r\nexport default IndexPage;\r\n\r\nexport const Head: FC<PageProps> = ({ location }) => (\r\n    <SEO\r\n        pathname={location.pathname}\r\n    />\r\n)","// extracted by mini-css-extract-plugin\nexport var icon = \"index-module--icon--a2d1d\";\nexport var link = \"index-module--link--9ea51\";"],"names":["React","Link","to","className","_ref","title","subtitle","pathname","site","useStaticQuery","mainTitle","description","author","image","imagePath","siteUrl","siteMetadata","url","rel","href","name","content","StaticImage","src","alt","loading","__imageData","Copyright","Head","location","SEO"],"sourceRoot":""}