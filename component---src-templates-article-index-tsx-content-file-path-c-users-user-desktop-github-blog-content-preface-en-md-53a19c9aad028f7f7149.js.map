{"version":3,"file":"component---src-templates-article-index-tsx-content-file-path-c-users-user-desktop-github-blog-content-preface-en-md-53a19c9aad028f7f7149.js","mappings":"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","sources":["webpack://SNinjo Blog/./content/Preface/en.md","webpack://SNinjo Blog/./src/templates/Article/index.tsx","webpack://SNinjo Blog/./src/components/Copyright/index.tsx","webpack://SNinjo Blog/./src/components/Copyright/index.module.scss","webpack://SNinjo Blog/./src/components/Menu/index.module.scss","webpack://SNinjo Blog/./src/components/Menu/index.tsx","webpack://SNinjo Blog/./src/components/Navigation/index.module.scss","webpack://SNinjo Blog/./src/components/Navigation/index.tsx","webpack://SNinjo Blog/./src/components/SEO/index.tsx","webpack://SNinjo Blog/./src/tools/Language/index.ts","webpack://SNinjo Blog/./src/templates/Article/index.module.scss","webpack://SNinjo Blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Hi! I'm SNinjo. This is my personal blog, which contains a lot of articles mainly about software development, programming design, practical experience, and so on. By the way, part of the articles is about my life story.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"Why-I-blog\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#Why-I-blog\",\n    \"aria-label\": \"Why I blog permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg fill=\\\"none\\\" viewBox=\\\"0 0 24 20\\\" width=\\\"27\\\" height=\\\"27\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path clip-rule=\\\"evenodd\\\" d=\\\"M12.5858 4.58579C13.3668 3.80474 14.6331 3.80474 15.4142 4.58579C16.1952 5.36683 16.1952 6.63316 15.4142 7.41421L12.4142 10.4142C11.6331 11.1953 10.3668 11.1953 9.58577 10.4142C9.19524 10.0237 8.56208 10.0237 8.17156 10.4142C7.78103 10.8047 7.78103 11.4379 8.17156 11.8284C9.73365 13.3905 12.2663 13.3905 13.8284 11.8284L16.8284 8.82843C18.3905 7.26633 18.3905 4.73367 16.8284 3.17157C15.2663 1.60948 12.7337 1.60948 11.1716 3.17157L9.67156 4.67157C9.28103 5.0621 9.28103 5.69526 9.67156 6.08579C10.0621 6.47631 10.6952 6.47631 11.0858 6.08579L12.5858 4.58579ZM7.58579 9.58579C8.36683 8.80474 9.63316 8.80474 10.4142 9.58579C10.8047 9.97631 11.4379 9.97631 11.8284 9.58579C12.219 9.19526 12.219 8.5621 11.8284 8.17157C10.2663 6.60948 7.73367 6.60948 6.17157 8.17157L3.17157 11.1716C1.60948 12.7337 1.60948 15.2663 3.17157 16.8284C4.73367 18.3905 7.26633 18.3905 8.82843 16.8284L10.3284 15.3284C10.719 14.9379 10.719 14.3047 10.3284 13.9142C9.9379 13.5237 9.30474 13.5237 8.91421 13.9142L7.41421 15.4142C6.63316 16.1953 5.36684 16.1953 4.58579 15.4142C3.80474 14.6332 3.80474 13.3668 4.58579 12.5858L7.58579 9.58579Z\\\" fill=\\\"white\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n    }\n  })), \"Why I blog\"), \"\\n\", React.createElement(_components.h2, null, \"1. Taken from the community, giving back to society.\"), \"\\n\", React.createElement(_components.p, null, \"When you are studying software development, you must to read many online tutorials or real textbooks written by other experts. Now, I want to be a blogger to help engineers and learners on the Internet with my articles.\"), \"\\n\", React.createElement(_components.h2, null, \"2. Learning notes\"), \"\\n\", React.createElement(_components.p, null, \"I organize my notes, sort out my thoughts, and compile them into understandable articles. Of course, these articles can help me to recall the expertise, just like a online handbook.\"), \"\\n\", React.createElement(_components.h2, null, \"3. Record life\"), \"\\n\", React.createElement(_components.p, null, \"I think blogging is a best way to record my life and career, so you can find out my outlook on life and work experience in the blog.\"), \"\\n\", React.createElement(_components.h2, null, \"4. Enhance creativity\"), \"\\n\", React.createElement(_components.p, null, \"Undeniably, I want to enhance my language skills more and more, need to see things from someone's perspective, and have to stimulate my creativity, because I'm a software designer, not just an engineer.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"Who-is-suitable-for-reading\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#Who-is-suitable-for-reading\",\n    \"aria-label\": \"Who is suitable for reading permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg fill=\\\"none\\\" viewBox=\\\"0 0 24 20\\\" width=\\\"27\\\" height=\\\"27\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path clip-rule=\\\"evenodd\\\" d=\\\"M12.5858 4.58579C13.3668 3.80474 14.6331 3.80474 15.4142 4.58579C16.1952 5.36683 16.1952 6.63316 15.4142 7.41421L12.4142 10.4142C11.6331 11.1953 10.3668 11.1953 9.58577 10.4142C9.19524 10.0237 8.56208 10.0237 8.17156 10.4142C7.78103 10.8047 7.78103 11.4379 8.17156 11.8284C9.73365 13.3905 12.2663 13.3905 13.8284 11.8284L16.8284 8.82843C18.3905 7.26633 18.3905 4.73367 16.8284 3.17157C15.2663 1.60948 12.7337 1.60948 11.1716 3.17157L9.67156 4.67157C9.28103 5.0621 9.28103 5.69526 9.67156 6.08579C10.0621 6.47631 10.6952 6.47631 11.0858 6.08579L12.5858 4.58579ZM7.58579 9.58579C8.36683 8.80474 9.63316 8.80474 10.4142 9.58579C10.8047 9.97631 11.4379 9.97631 11.8284 9.58579C12.219 9.19526 12.219 8.5621 11.8284 8.17157C10.2663 6.60948 7.73367 6.60948 6.17157 8.17157L3.17157 11.1716C1.60948 12.7337 1.60948 15.2663 3.17157 16.8284C4.73367 18.3905 7.26633 18.3905 8.82843 16.8284L10.3284 15.3284C10.719 14.9379 10.719 14.3047 10.3284 13.9142C9.9379 13.5237 9.30474 13.5237 8.91421 13.9142L7.41421 15.4142C6.63316 16.1953 5.36684 16.1953 4.58579 15.4142C3.80474 14.6332 3.80474 13.3668 4.58579 12.5858L7.58579 9.58579Z\\\" fill=\\\"white\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n    }\n  })), \"Who is suitable for reading\"), \"\\n\", React.createElement(_components.h2, null, \"1. Software Engineer\"), \"\\n\", React.createElement(_components.p, null, \"There are many articles mentioning expertise. If you forget commands or tricky issues and want to recall it quickly, I sort out useful tables or list of items in the blog.\"), \"\\n\", React.createElement(_components.h2, null, \"2. Programming learner\"), \"\\n\", React.createElement(_components.p, null, \"You can find many helpful tutorials here. Moreover, I provide suggested study programs and share my learning experiences. After getting it, you can choose a study plan that suits you according to your own situation.\"), \"\\n\", React.createElement(_components.h2, null, \"3. Anyone who want to understand what is program\"), \"\\n\", React.createElement(_components.p, null, \"Articles are sorted from easy to difficult, and I try to express hard knowledge with simpler examples.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"How-to-recommend-more-topics\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#How-to-recommend-more-topics\",\n    \"aria-label\": \"How to recommend more topics permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg fill=\\\"none\\\" viewBox=\\\"0 0 24 20\\\" width=\\\"27\\\" height=\\\"27\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path clip-rule=\\\"evenodd\\\" d=\\\"M12.5858 4.58579C13.3668 3.80474 14.6331 3.80474 15.4142 4.58579C16.1952 5.36683 16.1952 6.63316 15.4142 7.41421L12.4142 10.4142C11.6331 11.1953 10.3668 11.1953 9.58577 10.4142C9.19524 10.0237 8.56208 10.0237 8.17156 10.4142C7.78103 10.8047 7.78103 11.4379 8.17156 11.8284C9.73365 13.3905 12.2663 13.3905 13.8284 11.8284L16.8284 8.82843C18.3905 7.26633 18.3905 4.73367 16.8284 3.17157C15.2663 1.60948 12.7337 1.60948 11.1716 3.17157L9.67156 4.67157C9.28103 5.0621 9.28103 5.69526 9.67156 6.08579C10.0621 6.47631 10.6952 6.47631 11.0858 6.08579L12.5858 4.58579ZM7.58579 9.58579C8.36683 8.80474 9.63316 8.80474 10.4142 9.58579C10.8047 9.97631 11.4379 9.97631 11.8284 9.58579C12.219 9.19526 12.219 8.5621 11.8284 8.17157C10.2663 6.60948 7.73367 6.60948 6.17157 8.17157L3.17157 11.1716C1.60948 12.7337 1.60948 15.2663 3.17157 16.8284C4.73367 18.3905 7.26633 18.3905 8.82843 16.8284L10.3284 15.3284C10.719 14.9379 10.719 14.3047 10.3284 13.9142C9.9379 13.5237 9.30474 13.5237 8.91421 13.9142L7.41421 15.4142C6.63316 16.1953 5.36684 16.1953 4.58579 15.4142C3.80474 14.6332 3.80474 13.3668 4.58579 12.5858L7.58579 9.58579Z\\\" fill=\\\"white\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n    }\n  })), \"How to recommend more topics\"), \"\\n\", React.createElement(_components.p, null, \"If you want to recommend anything, please email me. I'd love to hear from you!\", React.createElement(_components.br), \"\\n\", \"By the way, the contact information is at the bottom of the menu.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/USER/Desktop/github/Blog/content/Preface/en.md\";\nimport React, {useRef, useState} from 'react';\nimport {MDXProvider} from '@mdx-js/react';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport {getLanguage} from '../../tools/Language';\nimport Layout from 'components/Layout';\nimport Menu from 'components/Menu';\nimport SEO from 'components/SEO';\nimport * as style from './index.module.scss';\nconst ArticleTemplate = _ref => {\n  let {data, location, children} = _ref;\n  const {mdx: article} = data;\n  return React.createElement(Layout, {\n    language: getLanguage(location.pathname, data.site.siteMetadata.languages).id\n  }, React.createElement(\"div\", {\n    className: style.div\n  }, React.createElement(Menu, {\n    currentPath: location.pathname,\n    contents: data.allMdx.nodes.map(node => ({\n      title: node.frontmatter.title,\n      depth: node.fields.depth,\n      path: node.fields.path\n    }))\n  }), React.createElement(\"section\", null, React.createElement(\"div\", {\n    className: style.container\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", null, article.frontmatter.title), React.createElement(\"h3\", null, article.fields.date)), React.createElement(\"div\", {\n    className: style.article\n  }, React.createElement(MDXProvider, {\n    components: {\n      pre: _ref2 => {\n        let {children} = _ref2;\n        const refPre = useRef(null);\n        const {0: isCopied, 1: setCopiedState} = useState(false);\n        const animationDuration = 3;\n        const refTimeout = useRef();\n        const copy = async () => {\n          await navigator.clipboard.writeText(refPre.current.innerText);\n          setCopiedState(true);\n          clearTimeout(refTimeout.current);\n          refTimeout.current = setTimeout(() => setCopiedState(false), 1000 * animationDuration);\n        };\n        const cssCopied = {\n          borderColor: 'lightgreen'\n        };\n        return React.createElement(\"pre\", {\n          ref: refPre\n        }, children, React.createElement(\"button\", {\n          style: isCopied ? cssCopied : {},\n          className: style.copyButton,\n          onClick: copy\n        }, isCopied ? React.createElement(StaticImage, {\n          className: style.img,\n          src: \"../../images/tick.png\",\n          alt: \"tick icon\",\n          title: \"tick icon\",\n          loading: \"eager\",\n          __imageData: require(\"C:/Users/USER/Desktop/github/Blog/.cache/caches/gatsby-plugin-image/2779116280.json\")\n        }) : React.createElement(StaticImage, {\n          className: style.img,\n          src: \"../../images/copy.png\",\n          alt: \"copy icon\",\n          title: \"copy icon\",\n          loading: \"eager\",\n          __imageData: require(\"C:/Users/USER/Desktop/github/Blog/.cache/caches/gatsby-plugin-image/778504682.json\")\n        })));\n      }\n    }\n  }, children))))));\n};\nArticleTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticleTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref3 => {\n  let {data, location} = _ref3;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    pathname: location.pathname\n  });\n};\nconst query = \"953797205\";\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport * as style from './index.module.scss';\r\n\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Link\r\n            to='/Preface/Copyright'\r\n            className={style.link}\r\n        >\r\n            <p>SNinjo 2023 © all rights reserved</p>\r\n        </Link>\r\n    )\r\n}\r\nexport default Copyright;","// extracted by mini-css-extract-plugin\nexport var link = \"index-module--link--288ba\";","// extracted by mini-css-extract-plugin\nexport var bottom = \"index-module--bottom--f3270\";\nexport var currentPath = \"index-module--currentPath--87fa4\";\nexport var imageContainer = \"index-module--imageContainer--7d443\";\nexport var img = \"index-module--img--14cbc\";\nexport var link = \"index-module--link--2398e\";\nexport var nav = \"index-module--nav--88d41\";\nexport var show = \"index-module--show--d0168\";","import React, { FC, useState } from 'react';\r\nimport { Link, useStaticQuery, graphql } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport { language, getLanguage } from '../../tools/Language';\r\nimport Navigation from 'components/Navigation';\r\nimport Copyright from 'components/Copyright';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype QueriedData = {\r\n    site: {\r\n        siteMetadata: {\r\n            languages: Array<language>\r\n        }\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    currentPath: string\r\n    contents: Array<{\r\n        title: string\r\n        depth: number\r\n        path: string\r\n    }>\r\n}\r\n\r\nconst Menu: FC<Props> = ({ currentPath, contents: arrContents }) => {\r\n    const { site }: QueriedData = useStaticQuery(graphql`\r\n        query Menu {\r\n            site {\r\n                siteMetadata {\r\n                    languages {\r\n                        id\r\n                        path\r\n                        contents\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const language = getLanguage(currentPath, site.siteMetadata.languages);\r\n\r\n    const [isShow, setDisplayState] = useState(false);\r\n\r\n\r\n    return (\r\n        <nav\r\n            className={`${style.nav} ${isShow? style.show : ''}`}\r\n        >\r\n            <div\r\n                className={`${style.imageContainer} ${isShow? '' : style.show}`}\r\n                \r\n                onClick={() => setDisplayState(true)}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/list.png'\r\n                    alt='list icon'\r\n                    title='Open menu'\r\n                    loading='eager'\r\n                />\r\n            </div>\r\n            <div\r\n                className={`${style.imageContainer} ${isShow? style.show : ''}`}\r\n                \r\n                onClick={() => setDisplayState(false)}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/cross.png'\r\n                    alt='cross icon'\r\n                    title='Close menu'\r\n                    loading='eager'\r\n                />\r\n            </div>\r\n            <Link\r\n                to={`/contents/${language.path}`}\r\n                className={style.link}\r\n            >\r\n                <span>{language.contents}</span>\r\n            </Link>\r\n            {\r\n                arrContents.map((contents, index) => (\r\n                    <Link\r\n                        key={`Link${index}`}\r\n                        to={contents.path}\r\n                        className={`${style.link} ${ currentPath.match(new RegExp(`${contents.path}[a-z]*\\/?$`))? style.currentPath : '' }`}\r\n                    >\r\n                        <span\r\n                            style={{\r\n                                paddingLeft: `${20 * contents.depth}px`\r\n                            }}\r\n                        >\r\n                            {contents.title}\r\n                        </span>\r\n                    </Link>\r\n                ))\r\n            }\r\n\r\n            <div\r\n                className={style.bottom}\r\n            >\r\n                <Navigation\r\n                    currentPath={currentPath}\r\n                />\r\n                <Copyright />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Menu;","// extracted by mini-css-extract-plugin\nexport var img = \"index-module--img--50e58\";\nexport var link = \"index-module--link--490a4\";\nexport var nav = \"index-module--nav--287f4\";","import React, { FC } from 'react';\r\nimport { Link, useStaticQuery, graphql, navigate } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nimport { language, getLanguage } from '../../tools/Language';\r\nimport * as style from './index.module.scss';\r\n\r\n\r\ntype QueriedData = {\r\n    site: {\r\n        siteMetadata: {\r\n            languages: Array<language>\r\n        }\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    currentPath: string\r\n}\r\nconst Navigation: FC<Props> = ({ currentPath }) => {\r\n    const { site }: QueriedData = useStaticQuery(graphql`\r\n        query Navigation {\r\n            site {\r\n                siteMetadata {\r\n                    languages {\r\n                        id\r\n                        name\r\n                        path\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const languages = site.siteMetadata.languages;\r\n\r\n    const navigateTo = (fromLanguagePath: string, toLanguagePath: string) => {\r\n        navigate( currentPath.replace(new RegExp(`\\/${fromLanguagePath}\\/?$`), `\\/${toLanguagePath}`) );\r\n    }\r\n\r\n\r\n    return (\r\n        <nav\r\n            className={style.nav}\r\n        >\r\n            <Link\r\n                to='/'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/blog.png'\r\n                    alt='blog logo'\r\n                    title='SNinjo Blog'\r\n                    loading='eager'\r\n                />\r\n            </Link>\r\n            <a\r\n                href='https://SNinjo.com'\r\n                target='_blank'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/sninjo.png'\r\n                    alt='SNinjo logo'\r\n                    title='SNinjo Personal Website'\r\n                    loading='eager'\r\n                />\r\n            </a>\r\n            <a\r\n                href='https://SNinjo.com/contact'\r\n                target='_blank'\r\n                className={style.link}\r\n            >\r\n                <StaticImage\r\n                    className={style.img}\r\n                    src='../../images/email.png'\r\n                    alt='contact icon'\r\n                    title='Contact Information'\r\n                    loading='eager'\r\n                />\r\n            </a>\r\n\r\n            <select\r\n                defaultValue={getLanguage(currentPath, languages).path}\r\n\r\n                onChange={  event => navigateTo(getLanguage(currentPath, languages).path, event.target.value)  }\r\n            >\r\n                {\r\n                    languages.map((language, index) => (\r\n                        <option\r\n                            key={`Language${index}`}\r\n                            value={language.path}\r\n                        >\r\n                            {language.name}\r\n                        </option>\r\n                    ))\r\n                }\r\n            </select>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navigation;","import React, { FC } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n\r\ntype Props = {\r\n    title: string\r\n    pathname: string\r\n}\r\n\r\nconst SEO: FC<Props> = ({ title: subtitle, pathname }) => {\r\n    const { site } = useStaticQuery(graphql`\r\n        query SEO {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                    description\r\n                    author\r\n                    image\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const { title: mainTitle, description, author, image: imagePath, siteUrl } = site.siteMetadata;\r\n    const title = `${subtitle? `${subtitle} | ` : ''}${mainTitle}`;\r\n    const url = `${siteUrl}${pathname}`;\r\n    const image = `${siteUrl}${imagePath}`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <title>{title}</title>\r\n            <link rel='canonical' href={url} />\r\n\r\n            <meta name=\"description\" content={description} />\r\n            <meta name=\"image\" content={image} />\r\n\r\n            <meta name='og:title' content={title} />\r\n            <meta name='og:description' content={description} />\r\n            <meta name='og:image' content={image} />\r\n            <meta name='og:type' content='website' />\r\n            <meta name='og:url' content={url} />\r\n            <meta name='og:site_name' content={mainTitle} />\r\n            \r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:title\" content={title} />\r\n            <meta name=\"twitter:url\" content={url} />\r\n            <meta name=\"twitter:description\" content={description} />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n        </>\r\n    )\r\n}\r\nexport default SEO;","export type language = {\r\n    id: string,\r\n    name: string,\r\n    path: string,\r\n    contents: string,\r\n    notMatch: string,\r\n}\r\n\r\nexport function getLanguage(path: string, languages: Array<language>): language {\r\n    let defaultLanguage: language;\r\n    for (const language of languages) {\r\n        if (  !language.id || !language.path && (language.path !== '')  ) throw Error('Language configuration error, please add \"id\" and \"path\" in graphql')\r\n\r\n        if (language.id === 'en') defaultLanguage = language;\r\n        else if (path.match(new RegExp(`\\/${language.path}\\/?$`))) return language;\r\n    }\r\n    return defaultLanguage!;\r\n}","// extracted by mini-css-extract-plugin\nexport var article = \"index-module--article--d8571\";\nexport var bottom = \"index-module--bottom--9d00e\";\nexport var container = \"index-module--container--7de9d\";\nexport var copyButton = \"index-module--copyButton--5c2e7\";\nexport var currentPath = \"index-module--currentPath--3f4f6\";\nexport var div = \"index-module--div--a334b\";\nexport var imageContainer = \"index-module--imageContainer--499ab\";\nexport var img = \"index-module--img--2720d\";\nexport var link = \"index-module--link--42a5a\";\nexport var nav = \"index-module--nav--e1ac6\";\nexport var show = \"index-module--show--fc7f8\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","a","span","h2","br","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","ArticleTemplate","_ref","data","location","children","mdx","article","Layout","language","getLanguage","pathname","site","siteMetadata","languages","Menu","currentPath","contents","allMdx","nodes","map","node","title","frontmatter","depth","fields","path","date","MDXProvider","pre","_ref2","refPre","useRef","isCopied","setCopiedState","useState","refTimeout","ref","borderColor","onClick","async","navigator","clipboard","writeText","current","innerText","clearTimeout","setTimeout","StaticImage","src","alt","loading","__imageData","require","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref3","SEO","Link","to","imageContainer","img","show","arrContents","useStaticQuery","isShow","setDisplayState","index","key","match","RegExp","paddingLeft","Navigation","Copyright","target","defaultValue","onChange","event","navigateTo","fromLanguagePath","toLanguagePath","value","navigate","replace","name","subtitle","mainTitle","description","author","image","imagePath","siteUrl","url","rel","content","defaultLanguage","Error","container","copyButton","div","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider"],"sourceRoot":""}