{"version":3,"file":"component---src-templates-article-index-tsx-content-file-path-c-users-user-desktop-github-blog-content-tool-notes-docker-en-md-48cbddc75d6aabdf44b7.js","mappings":"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","sources":["webpack://SNinjo Blog/./content/ToolNotes/Docker/en.md","webpack://SNinjo Blog/./src/templates/Article/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    a: \"a\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://docs.docker.com/get-started/overview/\"\n  }, \"View more information\")), \"\\n\", React.createElement(_components.h1, null, \"Container\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"list all containers\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker ps\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"run the image into the container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run \\\\\\r\\n    --name <container name> \\\\\\r\\n    --network <network name> \\\\\\r\\n    --rm (auto remove after stopping) \\\\\\r\\n    -d (run in the background) \\\\\\r\\n    -e <key>=<value> (set environment parameter) \\\\\\r\\n    -p <outer port>:<inner port> \\\\\\r\\n    -v <outer volume path>:<inner volume path> \\\\\\r\\n    <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"start the container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker start <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"stop the container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker stop <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"restart the container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker restart <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"remove the container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker rm <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Image\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"list all images\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image ls\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"build the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker build \\\\\\r\\n    -t <name>:<tag>?\\r\\n    --pull (latest version)\\r\\n    <DockerFile path>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"remove the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image rm <image id|repository>\\n\")), \"\\n\", \"remove <none> tag images\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker rmi $(docker images --filter \\\"dangling=true\\\" -q --no-trunc)\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"tag the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker tag <image id|repository>:<tag>? <repository>:<tag>?\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Registry\"), \"\\n\", React.createElement(_components.h3, null, \"Each registry has different definition for <repository>, and it defines where the image is updated to.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Docker hub:\", React.createElement(_components.br), \"\\n\", \"<repository> = <user name>/<repository name>\"), \"\\n\", React.createElement(_components.li, null, \"Harbor:\", React.createElement(_components.br), \"\\n\", \"<repository> = <domain>/<project>/<repository name>\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"login\", React.createElement(_components.br), \"\\n\", \"You can login multiple times to authenticate through multiple registries, but only once per registry (domain).\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"docker hub\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker login\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"private docker registry\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker login <domain>\\n\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"logout\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"docker hub\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logout\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"private docker registry\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logout <domain>\\n\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"push the image to registry\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker push <repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"pull the image from registry\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull <repository>:<tag>?\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Network\"), \"\\n\", React.createElement(_components.h3, null, \"Container networking refers to the ability for containers to connect to and communicate with each other, or to non-Docker workloads.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"list all networks\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network ls\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"show the network settings\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network inspect <network id|network name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"create the network\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network create <network name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"remove the network\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network rm <network id|network name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"connect a container to a network. It can also be set in \\\"docker run --network...\\\"\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network connect <network id|network name> <container name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"disconnect a container from a network\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network disconnect <network id|network name> <container name>\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Other\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"show information logged by a running container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>?\\n\")), \"\\n\", \"show only the last <line length> lines of logs\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>? --tail <line length>\\n\")), \"\\n\", \"monitor the live logs of a container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>? -f\\n\")), \"\\n\", \"redirect logs to a file\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>? >> <filename>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"enter CLI of the running container\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? /bin/bash\\n\")), \"\\n\", \"\\\"bash\\\" is not available in older Linux versions\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? /bin/sh\\n\")), \"\\n\", \"simple version\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? bash\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? sh\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"remove all images, containers, and caches\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker system prune -a\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"keep container running for debugging\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"for writing Dockerfile\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-docker\"\n  }, \"CMD sleep infinity\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"for running the image with specific argument\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run -d <image id|repository>:<tag>? sleep infinity\\n\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"set the timezone\", React.createElement(_components.br), \"\\n\", \"Some base images cannot be used with the following methods, such as alpine.\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"for writing Dockerfile\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-docker\"\n  }, \"ENV TZ=Asia/Taipei\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"for running the image with specific argument\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run -e TZ=Asia/Taipei <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Docker Hub\"), \"\\n\", React.createElement(_components.h3, null, \"a container registry built for developers and open source contributors to find, use, and share their container images\"), \"\\n\", React.createElement(_components.p, null, \"There are some useful services built into the container.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/ToolNotes/MongoDB/#DockerOfficialImage\"\n  }, \"MongoDB\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/ToolNotes/Redis/#DockerOfficialImage\"\n  }, \"Redis\")), \"\\n\", React.createElement(_components.li, null, \"RabbitMQ\", React.createElement(_components.br), \"\\n\", \"It's lightweight and easy to deploy on premises and in the cloud. It supports multiple messaging protocols and streaming.\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"down the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull rabbitmq:management\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"run the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run --name rabbitmq -d -p 15672:15672 -p 5672:5672 rabbitmq:management\\n\")), \"\\n\", \"set username and password\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run \\\\\\r\\n    -e RABBITMQ_DEFAULT_USER=<username> \\\\\\r\\n    -e RABBITMQ_DEFAULT_PASS=<password> \\\\\\r\\n    ...\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"enter the management website\", React.createElement(_components.br), \"\\n\", \"> \", React.createElement(_components.a, {\n    href: \"http://localhost:15672\"\n  }, \"http://localhost:15672\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Docker Compose\"), \"\\n\", React.createElement(_components.h3, null, \"defining and running multi-container Docker applications\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"configure services in \\\"docker-compose.yml\\\"\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"version: \\\"<docker compose version>\\\"\\r\\nservices:\\r\\n    <service name>:\\r\\n        image: <image id|repository>:<tag>?\\r\\n        container_name: <container name>\\r\\n        ports:\\r\\n            - <outer port>:<inner port>\\r\\n            ...\\r\\n        volumes:\\r\\n            - <outer path>:<inner path>\\r\\n            ...\\r\\n        networks:\\r\\n            - <network name>\\r\\n            ...\\r\\n        environment:\\r\\n            <key>: <value>\\r\\n            ...\\r\\n        restart: <restart policy> (\\\"always\\\" or \\\"on-failure:<repetitions>\\\")\\r\\n        command: <command> (run it after starting container)\\r\\nvolumes:\\r\\n    <volume path>:\\r\\nnetworks:\\r\\n    <network name>:\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"start services listed in YAML\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker-compose up -d <service name>*\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"stop services listed in YAML\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker-compose down <service name>*\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"show information logged by running services\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker-compose logs -f <service name>*\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Portainer\"), \"\\n\", React.createElement(_components.h3, null, \"a lightweight management UI which allows you to easily manage your different Docker environments\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"download the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull portainer/portainer-ce\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"run the image\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run \\\\\\r\\n    --name portainer \\\\\\r\\n    -d \\\\\\r\\n    -p 9000:9000 \\\\\\r\\n    -v <data path>:/data \\\\\\r\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\\\\r\\n    portainer/portainer-ce\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"enter the management website\", React.createElement(_components.br), \"\\n\", \"> \", React.createElement(_components.a, {\n    href: \"http://localhost:9000\"\n  }, \"http://localhost:9000\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/USER/Desktop/github/Blog/content/ToolNotes/Docker/en.md\";\nimport React, {useRef, useState} from 'react';\nimport {Link, navigate} from 'gatsby';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport {MDXProvider} from '@mdx-js/react';\nimport {capitalizeFirstLetterOfEachWord} from '../../tools/String';\nimport {getLanguage} from '../../tools/Language';\nimport Layout from 'components/Layout';\nimport Menu from 'components/Menu';\nimport SEO from 'components/SEO';\nimport Code from 'components/MdxComponents/Code';\nimport Heading1 from 'components/MdxComponents/Heading1';\nimport * as style from './index.module.scss';\nconst ArticleTemplate = _ref => {\n  var _article$tableOfConte;\n  let {data, location, children} = _ref;\n  const languages = data.site.siteMetadata.languages;\n  const {mdx: article} = data;\n  const refDiv = useRef(null);\n  const {0: isScrolledToTop, 1: setScrolledToTopState} = useState(true);\n  return React.createElement(Layout, {\n    language: getLanguage(location.pathname, languages).id\n  }, React.createElement(Menu, {\n    currentPath: location.pathname,\n    contents: data.allMdx.nodes.map(node => ({\n      title: node.frontmatter.title,\n      depth: node.fields.depth,\n      path: node.fields.path\n    }))\n  }), React.createElement(\"div\", {\n    ref: refDiv,\n    className: style.div,\n    onScroll: () => setScrolledToTopState(refDiv.current.scrollTop === 0)\n  }, React.createElement(\"div\", {\n    className: style.container\n  }, React.createElement(\"header\", {\n    className: style.articleHeader\n  }, React.createElement(\"h1\", null, article.frontmatter.title), React.createElement(\"h3\", null, article.fields.date)), article.tableOfContents.items ? React.createElement(\"ol\", {\n    className: style.tableOfContents\n  }, React.createElement(\"span\", null, getLanguage(location.pathname, languages).headline), (_article$tableOfConte = article.tableOfContents.items) === null || _article$tableOfConte === void 0 ? void 0 : _article$tableOfConte.map(_ref2 => {\n    let {title} = _ref2;\n    return React.createElement(\"li\", {\n      key: \"Heading_\" + title\n    }, React.createElement(Link, {\n      to: \"#\" + capitalizeFirstLetterOfEachWord(title),\n      className: style.link\n    }, title));\n  })) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n    className: style.articleContent\n  }, React.createElement(MDXProvider, {\n    components: {\n      a: _ref3 => {\n        let {href, children} = _ref3;\n        return React.createElement(\"a\", {\n          target: \"_blank\",\n          href: href\n        }, children);\n      },\n      pre: _ref4 => {\n        let {children} = _ref4;\n        return React.createElement(Code, null, children);\n      },\n      h1: _ref5 => {\n        let {children} = _ref5;\n        return React.createElement(Heading1, null, children);\n      }\n    }\n  }, children))), React.createElement(\"button\", {\n    className: style.buttonToTop,\n    disabled: isScrolledToTop,\n    onClick: () => {\n      navigate(location.pathname);\n      refDiv.current.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  }, React.createElement(StaticImage, {\n    className: style.image,\n    src: \"../../images/curvedArrow.png\",\n    alt: \"scroll to top icon\",\n    title: \"Scroll to top\",\n    loading: \"eager\",\n    __imageData: require(\"C:/Users/USER/Desktop/github/Blog/.cache/caches/gatsby-plugin-image/3711127795.json\")\n  }))));\n};\nArticleTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticleTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref6 => {\n  let {data, location} = _ref6;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    pathname: location.pathname\n  });\n};\nconst query = \"3582494129\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","br","a","h1","ul","li","pre","code","h3","ol","_provideComponents","components","React","href","className","wrapper","MDXLayout","ArticleTemplate","_ref","_article$tableOfConte","data","location","children","languages","site","siteMetadata","mdx","article","refDiv","useRef","isScrolledToTop","setScrolledToTopState","useState","Layout","language","getLanguage","pathname","id","Menu","currentPath","contents","allMdx","nodes","map","node","title","frontmatter","depth","fields","path","ref","style","onScroll","current","scrollTop","date","tableOfContents","items","headline","_ref2","key","Link","to","capitalizeFirstLetterOfEachWord","MDXProvider","_ref3","target","_ref4","Code","_ref5","Heading1","disabled","onClick","navigate","scrollTo","top","behavior","StaticImage","src","alt","loading","__imageData","require","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref6","SEO"],"sourceRoot":""}