{"version":3,"file":"component---src-templates-article-index-tsx-content-file-path-users-sninjo-desktop-github-blog-content-tool-notes-mongo-db-zh-md-05d4673b36690b904528.js","mappings":"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","sources":["webpack://SNinjo Blog/./content/ToolNotes/MongoDB/zh.md","webpack://SNinjo Blog/./src/templates/Article/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    a: \"a\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"MongoDB 使用的是文件導向的儲存概念，是一種靈活、易於擴展、高效能的NoSQL資料庫，它提供了可以跟SQL相比的 Query Language，同時也是 Open Source 的NoSQL DB，本身用 C++ 語言撰寫而成，在許多場景下可用於替代傳統的關聯式資料庫儲存方式。\", React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.mongodb.com/docs/manual/introduction/\"\n  }, \"View more information\")), \"\\n\", React.createElement(_components.h1, null, \"CLI 指令\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"進入 CLI\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"mongosh\\n\")), \"\\n\", \"指定資料庫參數\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"mongosh \\\\\\n    --host <host> \\\\\\n    --port <port> \\\\\\n    --username <username> \\\\\\n    --authenticationDatabase <database name>\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"資料庫\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"取得目前使用的資料庫\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db\\n\")), \"\\n\", \"\\\"test\\\" 是預設的資料庫。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"test\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"取得所有資料庫\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"show dbs\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"切換資料庫\", React.createElement(_components.br), \"\\n\", \"若資料庫不存在，則會自動新建。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"use <database name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"刪除資料庫\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.dropDatabase()\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"查詢基本指令\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"help\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Collection\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"取得目前資料庫的 collection\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"show collections\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"創建 collection\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.createCollection('<collection name>')\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"刪除 collection\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.<collection name>.drop()\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"查詢基本指令\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.help()\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Document\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"取得所有資料\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.<collection name>.find()\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"新增資料\", React.createElement(_components.br), \"\\n\", \"若 collection 不存在，則自動新建。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.<collection name>.insertOne(<JSON>)\\ndb.<collection name>.insertMany([<JSON>, <JSON>, ...])\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"查詢基本指令\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"db.<collection name>.help()\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Docker 官方映像檔\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"下載映像檔\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull mongo\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"運行映像檔\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run --name mongo -d -v <data path>:/data/db -p 27017:27017 -rm mongo\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"進入 CLI\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it mongo bash\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"執行 mongodb 指令\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"mongosh\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"測試是否部屬成功\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"show dbs\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"admin   40.00 KiB\\nconfig  12.00 KiB\\nlocal   40.00 KiB\\n\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/sninjo/Desktop/Github/Blog/content/ToolNotes/MongoDB/zh.md\";\nimport React, {useRef, useState} from 'react';\nimport {Link, navigate} from 'gatsby';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport {MDXProvider} from '@mdx-js/react';\nimport {capitalizeFirstLetterOfEachWord} from '../../tools/String';\nimport {getLanguage} from '../../tools/Language';\nimport Layout from 'components/Layout';\nimport Menu from 'components/Menu';\nimport SEO from 'components/SEO';\nimport Code from 'components/MdxComponents/Code';\nimport Heading1 from 'components/MdxComponents/Heading1';\nimport * as style from './index.module.scss';\nconst ArticleTemplate = _ref => {\n  var _article$tableOfConte;\n  let {data, location, children} = _ref;\n  const languages = data.site.siteMetadata.languages;\n  const {mdx: article} = data;\n  const refDiv = useRef(null);\n  const {0: isScrolledToTop, 1: setScrolledToTopState} = useState(true);\n  return React.createElement(Layout, {\n    language: getLanguage(location.pathname, languages).id\n  }, React.createElement(Menu, {\n    currentPath: location.pathname,\n    contents: data.allMdx.nodes.map(node => ({\n      title: node.frontmatter.title,\n      depth: node.fields.depth,\n      path: node.fields.path\n    }))\n  }), React.createElement(\"div\", {\n    ref: refDiv,\n    className: style.div,\n    onScroll: () => setScrolledToTopState(refDiv.current.scrollTop === 0)\n  }, React.createElement(\"div\", {\n    className: style.container\n  }, React.createElement(\"header\", {\n    className: style.articleHeader\n  }, React.createElement(\"h1\", null, article.frontmatter.title), React.createElement(\"h3\", null, article.fields.date)), article.tableOfContents.items ? React.createElement(\"ol\", {\n    className: style.tableOfContents\n  }, React.createElement(\"span\", null, getLanguage(location.pathname, languages).headline), (_article$tableOfConte = article.tableOfContents.items) === null || _article$tableOfConte === void 0 ? void 0 : _article$tableOfConte.map(_ref2 => {\n    let {title} = _ref2;\n    return React.createElement(\"li\", {\n      key: \"Heading_\" + title\n    }, React.createElement(Link, {\n      to: \"#\" + capitalizeFirstLetterOfEachWord(title),\n      className: style.link\n    }, title));\n  })) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n    className: style.articleContent\n  }, React.createElement(MDXProvider, {\n    components: {\n      a: _ref3 => {\n        let {href, children} = _ref3;\n        return React.createElement(\"a\", {\n          target: \"_blank\",\n          href: href\n        }, children);\n      },\n      pre: _ref4 => {\n        let {children} = _ref4;\n        return React.createElement(Code, null, children);\n      },\n      h1: _ref5 => {\n        let {children} = _ref5;\n        return React.createElement(Heading1, null, children);\n      }\n    }\n  }, children))), React.createElement(\"button\", {\n    className: style.buttonToTop,\n    disabled: isScrolledToTop,\n    onClick: () => {\n      navigate(location.pathname);\n      refDiv.current.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  }, React.createElement(StaticImage, {\n    className: style.image,\n    src: \"../../images/curvedArrow.png\",\n    alt: \"scroll to top icon\",\n    title: \"Scroll to top\",\n    loading: \"eager\",\n    __imageData: require(\"/Users/sninjo/Desktop/Github/Blog/.cache/caches/gatsby-plugin-image/542481057.json\")\n  }))));\n};\nArticleTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticleTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref6 => {\n  let {data, location} = _ref6;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    pathname: location.pathname\n  });\n};\nconst query = \"3582494129\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","br","a","h1","ul","li","pre","code","ol","_provideComponents","components","React","href","className","wrapper","MDXLayout","ArticleTemplate","_ref","_article$tableOfConte","data","location","children","languages","site","siteMetadata","mdx","article","refDiv","useRef","isScrolledToTop","setScrolledToTopState","useState","Layout","language","getLanguage","pathname","id","Menu","currentPath","contents","allMdx","nodes","map","node","title","frontmatter","depth","fields","path","ref","style","onScroll","current","scrollTop","date","tableOfContents","items","headline","_ref2","key","Link","to","capitalizeFirstLetterOfEachWord","MDXProvider","_ref3","target","_ref4","Code","_ref5","Heading1","disabled","onClick","navigate","scrollTo","top","behavior","StaticImage","src","alt","loading","__imageData","require","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref6","SEO"],"sourceRoot":""}