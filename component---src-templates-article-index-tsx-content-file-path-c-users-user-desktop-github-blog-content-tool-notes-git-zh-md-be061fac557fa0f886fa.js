"use strict";(self.webpackChunkSNinjo_Blog=self.webpackChunkSNinjo_Blog||[]).push([[407],{1248:function(e,l,n){n.r(l),n.d(l,{Head:function(){return b},default:function(){return f}});var t=n(1151),a=n(7294);function c(e){const l=Object.assign({h1:"h1",ul:"ul",li:"li",pre:"pre",code:"code",p:"p"},(0,t.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(l.h1,null,"一般"),"\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"初始化 (建立 .git 資料夾)","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git init\n")),"\n"),"\n",a.createElement(l.li,null,"克隆存儲庫","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git clone <repository URL>\n")),"\n","淺克隆 (只下載最近一次提交與指定分支)","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git clone --depth 1 -b <branch> <repository URL>\n")),"\n"),"\n",a.createElement(l.li,null,"推送本地儲存庫去遠端儲存庫","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git push\n")),"\n"),"\n",a.createElement(l.li,null,"拉取遠端儲存庫回本地儲存庫","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git pull\n")),"\n"),"\n",a.createElement(l.li,null,"顯示工作目錄和暫存的狀態","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git status\n")),"\n"),"\n"),"\n",a.createElement(l.h1,null,"提交"),"\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"將更改過的檔案建立索引","\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"單一檔案","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git add <file path>\n")),"\n"),"\n",a.createElement(l.li,null,"所有檔案","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git add .\n")),"\n"),"\n"),"\n"),"\n",a.createElement(l.li,null,"提交已建立索引的檔案至本地儲存庫","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},'git commit -m "<message>"\n')),"\n","為所有檔案建立索引並提交","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},'git commit -a -m "<message>"\n')),"\n"),"\n",a.createElement(l.li,null,"顯示歷史提交記錄","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git log\n")),"\n"),"\n",a.createElement(l.li,null,"顯示完整的歷史提交記錄 (reference logs)","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git reflog\n")),"\n"),"\n",a.createElement(l.li,null,"復原提交並創建新的分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git revert <commit id>\n")),"\n"),"\n",a.createElement(l.li,null,"重設 HEAD 到指定 commit","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git reset --hard <commit id>\n")),"\n"),"\n",a.createElement(l.li,null,"強制用指定的分支覆蓋這個分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git reset --hard <branch>\n")),"\n","舉例來說, 覆蓋「develop」到「master」","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git checkout master\r\ngit reset --hard develop\n")),"\n"),"\n"),"\n",a.createElement(l.h1,null,"分支"),"\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"列出所有分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git branch\n")),"\n","包含遠端分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git branch -a\n")),"\n"),"\n",a.createElement(l.li,null,"建立分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git branch <branch name>\n")),"\n"),"\n",a.createElement(l.li,null,"切換分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git checkout <branch name>\n")),"\n","切換並建立分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git checkout -b <branch name>\n")),"\n"),"\n",a.createElement(l.li,null,"刪除分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git branch -d <branch name>\n")),"\n"),"\n",a.createElement(l.li,null,"刪除遠端分支","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git push <remote> --delete <branch>\n")),"\n"),"\n",a.createElement(l.li,null,"合併指定分支到這個分支上","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git merge <branch name>\n")),"\n","舉例來說, 合併「develop」到「master」","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git checkout master\r\ngit merge develop\n")),"\n"),"\n"),"\n",a.createElement(l.h1,null,"暫存"),"\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"列出所有暫存","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash list\n")),"\n"),"\n",a.createElement(l.li,null,"儲存未提交的更改","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash\n")),"\n"),"\n",a.createElement(l.li,null,"還原並刪除暫存","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash pop\n")),"\n","指定暫存的索引","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash pop stash@{n}\n")),"\n","還原並保留暫存","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash apply stash@{n}\n")),"\n"),"\n",a.createElement(l.li,null,"刪除暫存","\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"最新的暫存","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash drop\n")),"\n"),"\n",a.createElement(l.li,null,"全部的暫存","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git stash clear\n")),"\n"),"\n"),"\n"),"\n"),"\n",a.createElement(l.h1,null,"設定"),"\n",a.createElement(l.p,null,"列出遠端資料庫的網址"),"\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git remote -v\n")),"\n",a.createElement(l.p,null,"更換遠端資料庫的網址"),"\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"get remote set-url origin <URL>\n")),"\n",a.createElement(l.p,null,"作用於這個資料夾"),"\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git config <parameter>\n")),"\n",a.createElement(l.p,null,"作用於這個系統"),"\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git config --global <parameter>\n")),"\n",a.createElement(l.ul,null,"\n",a.createElement(l.li,null,"顯示 config (按「q」離開)","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git config --list\n")),"\n"),"\n",a.createElement(l.li,null,"設定 config","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},"git config <key> <value>\n")),"\n","舉例來說, 設定使用者資訊","\n",a.createElement(l.pre,null,a.createElement(l.code,{className:"language-shell"},'git config user.name "<username>"\r\ngit config user.email "<email>"\n')),"\n"),"\n"))}var r=function(e){void 0===e&&(e={});const{wrapper:l}=Object.assign({},(0,t.ah)(),e.components);return l?a.createElement(l,e,a.createElement(c,e)):c(e)},m=n(1883),s=n(8032),u=n(7392),g=n(2036),i=n(908),E=n(8197),o=n(2349),h=n(8554),p=n(4072),d=n(1950);const N=e=>{var l;let{data:c,location:r,children:o}=e;const N=c.site.siteMetadata.languages,{mdx:f}=c,b=(0,a.useRef)(null),{0:v,1:k}=(0,a.useState)(!0);return a.createElement(i.Z,{language:(0,g.G)(r.pathname,N).id},a.createElement(E.Z,{currentPath:r.pathname,contents:c.allMdx.nodes.map((e=>({title:e.frontmatter.title,depth:e.fields.depth,path:e.fields.path})))}),a.createElement("div",{ref:b,className:d.hi,onScroll:()=>k(0===b.current.scrollTop)},a.createElement("div",{className:d.nC},a.createElement("header",{className:d.fr},a.createElement("h1",null,f.frontmatter.title),a.createElement("h3",null,f.fields.date)),f.tableOfContents.items?a.createElement("ol",{className:d.Jt},a.createElement("span",null,(0,g.G)(r.pathname,N).headline),null===(l=f.tableOfContents.items)||void 0===l?void 0:l.map((e=>{let{title:l}=e;return a.createElement("li",{key:"Heading_"+l},a.createElement(m.Link,{to:"#"+(0,u.S)(l),className:d.p4},l))}))):a.createElement(a.Fragment,null),a.createElement("div",{className:d.Ig},a.createElement(t.Zo,{components:{a:e=>{let{href:l,children:n}=e;return a.createElement("a",{target:"_blank",href:l},n)},pre:e=>{let{children:l}=e;return a.createElement(h.Z,null,l)},h1:e=>{let{children:l}=e;return a.createElement(p.Z,null,l)}}},o))),a.createElement("button",{className:d.vc,disabled:v,onClick:()=>{(0,m.navigate)(r.pathname),b.current.scrollTo({top:0,behavior:"smooth"})}},a.createElement(s.S,{className:d.BH,src:"../../images/curvedArrow.png",alt:"scroll to top icon",title:"Scroll to top",loading:"eager",__imageData:n(5097)}))))};function f(e){return a.createElement(N,e,a.createElement(r,e))}const b=e=>{let{data:l,location:n}=e;return a.createElement(o.Z,{title:l.mdx.frontmatter.title,pathname:n.pathname})}}}]);
//# sourceMappingURL=component---src-templates-article-index-tsx-content-file-path-c-users-user-desktop-github-blog-content-tool-notes-git-zh-md-be061fac557fa0f886fa.js.map