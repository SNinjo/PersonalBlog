{"version":3,"file":"component---src-templates-article-index-tsx-content-file-path-users-sninjo-desktop-github-blog-content-tool-notes-docker-zh-md-b371a9ce68fd47b54057.js","mappings":"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","sources":["webpack://SNinjo Blog/./content/ToolNotes/Docker/zh.md","webpack://SNinjo Blog/./src/templates/Article/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    a: \"a\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Docker 是一個開放原始碼的開放平臺軟體，用於開發應用、交付應用和執行應用。Docker 允許使用者將基礎設施中的應用單獨分割出來，形成更小的顆粒，從而提高交付軟體的速度。\", React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://docs.docker.com/get-started/overview/\"\n  }, \"查看更多介紹\")), \"\\n\", React.createElement(_components.h1, null, \"容器\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"列出所有容器\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker ps\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"將映像檔移至容器執行\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run \\\\\\n    --name <container name> \\\\\\n\\t--network <network name> \\\\\\n    --rm (auto remove after stopping) \\\\\\n    -d (run in the background) \\\\\\n    -p <outer port>:<inner port> \\\\\\n    -v <outer volume path>:<inner volume path> \\\\\\n    <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"啟動容器\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker start <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"停止容器\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker stop <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"重啟容器\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker restart <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"刪除容器\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker rm <image id|repository>:<tag>?\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"映像檔\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"列出所有映像檔\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image ls\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"標註映像檔\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker tag <image id|repository>:<tag>? <repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"刪除映像檔\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker image rm <image id|repository>\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"註冊伺服器\"), \"\\n\", React.createElement(_components.h3, null, \"每個註冊伺服器對於 <repository> 都有不同的定義, 且它也決定映像檔將更新到何處\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Docker hub:\", React.createElement(_components.br), \"\\n\", \"<repository> = <user name>/<repository name>\"), \"\\n\", React.createElement(_components.li, null, \"Harbor:\", React.createElement(_components.br), \"\\n\", \"<repository> = <host>/<project>/<repository name>\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"登入 docker hub\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker login\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"登入 private docker registry\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker login <host>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"推送映像檔上去伺服器\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker push <repository>:<tag>?\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"拉取映像檔下來本地端\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker pull <repository>:<tag>?\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"網路\"), \"\\n\", React.createElement(_components.h3, null, \"讓容器互相連接、溝通的網路設定\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"列出所有網路\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network ls\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"顯示網路的詳細設定\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network inspect <network id|network name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"將容器連接至網路上 (亦可設定在「docker run --network...」)\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network connect <network id|network name> <container name>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"將容器從網路上斷開連結\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker network disconnect <network id|network name> <container name>\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"其他\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"列出正在執行容器的 log\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>?\\n\")), \"\\n\", \"顯示最後 <line length> 行的 log\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>? --tail <line length>\\n\")), \"\\n\", \"即時監聽正在執行容器的 log\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker logs <image id|repository>:<tag>? -f\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"進入正在執行容器的 CLI\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? /bin/bash\\n\")), \"\\n\", \"在一些較老的 Linux 版本不能使用「bash」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? /bin/sh\\n\")), \"\\n\", \"可簡寫成\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? bash\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker exec -it <image id|repository>:<tag>? sh\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"刪除所有的映像檔、容器、快取\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker system prune -a\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"方便除錯讓容器保持執行狀態\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"撰寫 Dockerfile\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-docker\"\n  }, \"CMD sleep infinity\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"帶參數啟動映像檔\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run -d <image id|repository>:<tag>? sleep infinity\\n\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Docker Hub\"), \"\\n\", React.createElement(_components.h3, null, \"官方提供的註冊伺服器\"), \"\\n\", React.createElement(_components.p, null, \"以下陳列了一些部屬強大服務的容器\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/ToolNotes/MongoDB/zh/#Docker%E5%AE%98%E6%96%B9%E6%98%A0%E5%83%8F%E6%AA%94\"\n  }, \"MongoDB\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/ToolNotes/Redis/zh/#Docker%E5%AE%98%E6%96%B9%E6%98%A0%E5%83%8F%E6%AA%94\"\n  }, \"Redis\")), \"\\n\", React.createElement(_components.li, null, \"RabbitMQ\", React.createElement(_components.br), \"\\n\", \"實作進階訊息佇列協定的開源訊息代理軟體\", \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"下載並運行映像檔, 一併設置使用帳號\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"docker run --name rabbitmq -d -p 15672:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_USER=<username> -e RABBITMQ_DEFAULT_PASS=<password> rabbitmq:management\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"開啟管理網頁，並輸入剛設置好的帳密\", React.createElement(_components.br), \"\\n\", \"> http://localhost:15672\"), \"\\n\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/sninjo/Desktop/Github/Blog/content/ToolNotes/Docker/zh.md\";\nimport React, {useRef, useState} from 'react';\nimport {Link, navigate} from 'gatsby';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport {MDXProvider} from '@mdx-js/react';\nimport {capitalizeFirstLetterOfEachWord} from '../../tools/String';\nimport {getLanguage} from '../../tools/Language';\nimport Layout from 'components/Layout';\nimport Menu from 'components/Menu';\nimport SEO from 'components/SEO';\nimport Code from 'components/MdxComponents/Code';\nimport Heading1 from 'components/MdxComponents/Heading1';\nimport * as style from './index.module.scss';\nconst ArticleTemplate = _ref => {\n  var _article$tableOfConte;\n  let {data, location, children} = _ref;\n  const languages = data.site.siteMetadata.languages;\n  const {mdx: article} = data;\n  const refDiv = useRef(null);\n  const {0: isScrolledToTop, 1: setScrolledToTopState} = useState(true);\n  return React.createElement(Layout, {\n    language: getLanguage(location.pathname, languages).id\n  }, React.createElement(Menu, {\n    currentPath: location.pathname,\n    contents: data.allMdx.nodes.map(node => ({\n      title: node.frontmatter.title,\n      depth: node.fields.depth,\n      path: node.fields.path\n    }))\n  }), React.createElement(\"div\", {\n    ref: refDiv,\n    className: style.div,\n    onScroll: () => setScrolledToTopState(refDiv.current.scrollTop === 0)\n  }, React.createElement(\"div\", {\n    className: style.container\n  }, React.createElement(\"header\", {\n    className: style.articleHeader\n  }, React.createElement(\"h1\", null, article.frontmatter.title), React.createElement(\"h3\", null, article.fields.date)), article.tableOfContents.items ? React.createElement(\"ol\", {\n    className: style.tableOfContents\n  }, React.createElement(\"span\", null, getLanguage(location.pathname, languages).headline), (_article$tableOfConte = article.tableOfContents.items) === null || _article$tableOfConte === void 0 ? void 0 : _article$tableOfConte.map(_ref2 => {\n    let {title} = _ref2;\n    return React.createElement(\"li\", {\n      key: \"Heading_\" + title\n    }, React.createElement(Link, {\n      to: \"#\" + capitalizeFirstLetterOfEachWord(title),\n      className: style.link\n    }, title));\n  })) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n    className: style.articleContent\n  }, React.createElement(MDXProvider, {\n    components: {\n      a: _ref3 => {\n        let {href, children} = _ref3;\n        return React.createElement(\"a\", {\n          target: \"_blank\",\n          href: href\n        }, children);\n      },\n      pre: _ref4 => {\n        let {children} = _ref4;\n        return React.createElement(Code, null, children);\n      },\n      h1: _ref5 => {\n        let {children} = _ref5;\n        return React.createElement(Heading1, null, children);\n      }\n    }\n  }, children))), React.createElement(\"button\", {\n    className: style.buttonToTop,\n    disabled: isScrolledToTop,\n    onClick: () => {\n      navigate(location.pathname);\n      refDiv.current.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  }, React.createElement(StaticImage, {\n    className: style.image,\n    src: \"../../images/curvedArrow.png\",\n    alt: \"scroll to top icon\",\n    title: \"Scroll to top\",\n    loading: \"eager\",\n    __imageData: require(\"/Users/sninjo/Desktop/Github/Blog/.cache/caches/gatsby-plugin-image/542481057.json\")\n  }))));\n};\nArticleTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticleTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref6 => {\n  let {data, location} = _ref6;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    pathname: location.pathname\n  });\n};\nconst query = \"3582494129\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","br","a","h1","ul","li","pre","code","h3","ol","_provideComponents","components","React","href","className","wrapper","MDXLayout","ArticleTemplate","_ref","_article$tableOfConte","data","location","children","languages","site","siteMetadata","mdx","article","refDiv","useRef","isScrolledToTop","setScrolledToTopState","useState","Layout","language","getLanguage","pathname","id","Menu","currentPath","contents","allMdx","nodes","map","node","title","frontmatter","depth","fields","path","ref","style","onScroll","current","scrollTop","date","tableOfContents","items","headline","_ref2","key","Link","to","capitalizeFirstLetterOfEachWord","MDXProvider","_ref3","target","_ref4","Code","_ref5","Heading1","disabled","onClick","navigate","scrollTo","top","behavior","StaticImage","src","alt","loading","__imageData","require","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref6","SEO"],"sourceRoot":""}