{"version":3,"file":"component---src-templates-article-index-tsx-content-file-path-c-users-user-desktop-github-blog-content-programming-design-beginner-basic-concept-zh-md-cc32b22b4b2263dba7b3.js","mappings":"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","sources":["webpack://SNinjo Blog/./content/ProgrammingDesign/Beginner/BasicConcept/zh.md","webpack://SNinjo Blog/./src/templates/Article/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    br: \"br\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"變數\"), \"\\n\", React.createElement(_components.p, null, \"變數是一具有名子且可以存值的儲存空間。在第一次使用前需要先宣告，並在指派值給它時便會創建。\\r\\n舉例來說，我們宣告變數「x」並指派 10 給變數「y」。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x        # 宣告 x\\r\\ny = 10   # 宣告 y 且指派 10 給 y\\n\")), \"\\n\", React.createElement(_components.p, null, \"以下為常見的變數型態：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"布林\", React.createElement(_components.br), \"\\n\", \"只有「True」與「False」兩種值，常用在\", React.createElement(_components.a, {\n    href: \"#%E6%B1%BA%E7%AD%96\"\n  }, \"決策\"), \"。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = True\\r\\ny = False\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"數字\", React.createElement(_components.br), \"\\n\", \"包含整數與浮點數兩種類型。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = 10   # 整數\\r\\ny = 1.5  # 浮點數\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"字串\", React.createElement(_components.br), \"\\n\", \"就是文字，以下有三種字串。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = \\\"I'm string.\\\"\\r\\ny = 'I am string, too.'\\r\\nz = '''I am also string'''  # 可包含換行符「\\\\n」\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"物件\", React.createElement(_components.br), \"\\n\", \"擁有可以透過 key 使用的屬性與方法，就像是「鍵-值對」。在 Python 中，我們利用「字典」或是大括號創建它。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = dict(  id=1, name='sninjo'  )  # 字典\\r\\ny = {  id: 2, name: 'jo'  }  # 大括號\\r\\nx['id']  # 1\\r\\ny[\\\"name\\\"] = 'alan'  # 指派 'alan' 給 key 為「name」的屬性\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"陣列\", React.createElement(_components.br), \"\\n\", \"一個很基礎的資料結構，將值儲存在連續的儲存空間中，並利用從 0 開始的「索引」來使用當中的元素。我們利用中括號來創建它。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = [<物件>, <物件>, ...]\\r\\nx[<索引>]\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = [1, 2, 3]\\r\\nx[0]  # 1\\r\\nx[1]  # 2\\r\\nx[2] = 10  # 指派 10 給索引為「2」的元素\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"函式\"), \"\\n\", React.createElement(_components.p, null, \"函式是被呼叫才執行的一段程式碼，在 Python 中使用縮排而非大括號來定義函式程式碼的範圍，並使用「return」離開這段程式並回傳值。\\r\\n此外，在函數宣告時陳列在小括號中的變數稱為「參數」，其可以在函數中使用；而呼叫函式時在小括號中的值稱為「引數」，其可以將值傳入對應的參數中。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def <name>(<parameter>, <parameter>, ...):\\r\\n    <action>                         # 函式的程式碼\\r\\n<name>(<argument>, <argument>, ...)  # 呼叫函式並帶入引數\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def sum(x, y):\\r\\n    return x + y\\r\\nsum(1, 2)\\n\")), \"\\n\", React.createElement(_components.p, null, \"以下為常見的函示：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"print()\", React.createElement(_components.br), \"\\n\", \"在終端機中顯示字串。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print('Hello World')\\r\\nx = True\\r\\nprint(x)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"Hello World\\r\\nTrue\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"type()\", React.createElement(_components.br), \"\\n\", \"回傳物件的型態。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(type('Hello World'))\\r\\nx = True\\r\\nprint(type(x))\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"<class 'str'>\\r\\n<class 'bool'>\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"len()\", React.createElement(_components.br), \"\\n\", \"回傳物件的長度。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(len('Hello World'))\\r\\nx = [1, 2, 3]\\r\\nprint(len(x))\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"11\\r\\n3\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"abs()\", React.createElement(_components.br), \"\\n\", \"回傳數字的絕對值。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(abs(10))\\r\\nx = -5\\r\\nprint(abs(x))\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"10\\r\\n5\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"range()\", React.createElement(_components.br), \"\\n\", \"回傳有序的等差數列，像是 range(min, max, step) 會列出從「min」開始到小於「max」且間格為「step」的數列。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"range(0, 5, 1)   # 0, 1, 2, 3, 4\\r\\nrange(9, 4, -2)  # 9, 7, 5\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"決策\"), \"\\n\", React.createElement(_components.p, null, \"決策又稱為「條件判斷」，若符合條件則可以執行指定的程式碼，並捨棄之後的判斷條件。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if <條件>:\\r\\n    <動作>\\r\\nelif <條件>:\\r\\n    <動作>\\r\\nelif <條件>:\\r\\n    <動作>\\r\\n...\\r\\nelse:\\r\\n    <動作>\\n\")), \"\\n\", React.createElement(_components.p, null, \"以下為簡單的範例：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"if\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if True:\\r\\n    print('if')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"if\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if False:\\r\\n    print('if')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  })), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"if-else\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if True:\\r\\n    print('if')\\r\\nelse:\\r\\n    print('else')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"if\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if False:\\r\\n    print('if')\\r\\nelse:\\r\\n    print('else')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"else\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"if-elif-else\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if True:\\r\\n    print('if')\\r\\nelif True:\\r\\n    print('elif')\\r\\nelse:\\r\\n    print('else')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"if\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if False:\\r\\n    print('if')\\r\\nelif True:\\r\\n    print('elif')\\r\\nelse:\\r\\n    print('else')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"elif\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"if False:\\r\\n    print('if')\\r\\nelif False:\\r\\n    print('elif')\\r\\nelse:\\r\\n    print('else')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"else\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"以下為條件判斷常用到的運算子。\"), \"\\n\", React.createElement(_components.h2, null, \"布林運算子\"), \"\\n\", React.createElement(_components.p, null, \"布林運算子也稱為「邏輯運算子」，它將用來處理多種條件判斷。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"not\", React.createElement(_components.br), \"\\n\", \"回傳相反的布林值。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(not True)\\r\\nprint(not False)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"False\\r\\nTrue\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"or\", React.createElement(_components.br), \"\\n\", \"回傳「True」若其中一個運算元是「True」。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(True or False)\\r\\nprint(False or False)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"True\\r\\nFalse\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"and\", React.createElement(_components.br), \"\\n\", \"回傳「True」若兩個運算元皆是「True」。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(True or True)\\r\\nprint(True or False)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"True\\r\\nFalse\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"比較運算元\"), \"\\n\", React.createElement(_components.p, null, \"比較運算元將比較兩個值，並回傳一個布林值作為結果。\"), \"\\n\", React.createElement(_components.p, null, \"以下為六種不同的比較運算元：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"等於「==」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(1 == 1)\\r\\nprint('sninjo' == 'jo')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"True\\r\\nFalse\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"不等於「!=」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(1 != 1)\\r\\nprint('sninjo' != 'jo')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"False\\r\\nTrue\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"小於「<」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(1 < 1)\\r\\nprint(1 < 5)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"False\\r\\nTrue\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"大於「>」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(1 > 1)\\r\\nprint(1 > -1)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"False\\r\\nTrue\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"小於等於「<=」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(1 <= 1)\\r\\nprint(1 <= -1)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"True\\r\\nFalse\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"大於等於「>=」\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"print(1 >= 1)\\r\\nprint(1 >= 5)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"True\\r\\nFalse\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"迴圈\"), \"\\n\", React.createElement(_components.p, null, \"迴圈被用於重複執行一段程式碼，在 Python 中，我們使用縮排而非大括號來定義程式碼的範圍。此外，這也被稱為「迭代」，其核心概念為「撰寫一次程式」則可以「執行數次」。\"), \"\\n\", React.createElement(_components.p, null, \"以下為兩種類型的迴圈：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"while\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"while <條件>:\\r\\n    <動作>\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"x = True\\r\\nwhile (x):\\r\\n    print('while')\\r\\n    x = False\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"while\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"for\", React.createElement(_components.br), \"\\n\", \"陣列與 range() 皆為迭代物件，在 for 迴圈中，每次的迭代皆可以「從迭代物件中按照順序取得一個元素」指派至變數中使用。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"for <物件> in <迭代物件>:\\r\\n    <動作>\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"for x in [0, 1, 2]:\\r\\n    print(x)\\r\\nfor x in range(3, 5, 1):\\r\\n    print(x)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"0\\r\\n1\\r\\n2\\r\\n3\\r\\n4\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"以下為兩個實用的語句：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"break\", React.createElement(_components.br), \"\\n\", \"跳出迴圈，亦即離開此段程式碼並繼續執行迴圈以下的部分。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"for x in [0, 1, 2]:\\r\\n    print(x)\\r\\n    break\\r\\n    print('Hi')\\r\\nprint('end')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"0\\r\\nend\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"continue\", React.createElement(_components.br), \"\\n\", \"結束此次迴圈的迭代，繼續執行下一次迭代。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"for x in [0, 1, 2]:\\r\\n    print(x)\\r\\n    continue\\r\\n    print('Hi')\\r\\nprint('end')\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"0\\r\\n1\\r\\n2\\r\\nend\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"註解\"), \"\\n\", React.createElement(_components.p, null, \"註解被用於闡述程式碼的功能使其更具易讀性，程式將不會編譯與執行它。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"單行\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"# 我是註解\\r\\nx = 10  # 我也是註解\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"多行\", React.createElement(_components.br), \"\\n\", \"事實上這是一個可包含換行符「\\\\n」的字串。\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"'''\\r\\n第一行註解\\r\\n第二行註解\\r\\n'''\\n\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/USER/Desktop/github/Blog/content/ProgrammingDesign/Beginner/BasicConcept/zh.md\";\nimport React, {useRef, useState} from 'react';\nimport {Link, navigate} from 'gatsby';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport {MDXProvider} from '@mdx-js/react';\nimport {capitalizeFirstLetterOfEachWord} from '../../tools/String';\nimport {getLanguage} from '../../tools/Language';\nimport Layout from 'components/Layout';\nimport Menu from 'components/Menu';\nimport SEO from 'components/SEO';\nimport Code from 'components/MdxComponents/Code';\nimport Heading1 from 'components/MdxComponents/Heading1';\nimport * as style from './index.module.scss';\nconst ArticleTemplate = _ref => {\n  var _article$tableOfConte;\n  let {data, location, children} = _ref;\n  const languages = data.site.siteMetadata.languages;\n  const {mdx: article} = data;\n  const refDiv = useRef(null);\n  const {0: isScrolledToTop, 1: setScrolledToTopState} = useState(true);\n  const indexArticle = data.allMdx.nodes.findIndex(node => location.pathname.match(new RegExp(node.fields.path + \"/?$\")));\n  return React.createElement(Layout, {\n    language: getLanguage(location.pathname, languages).id\n  }, React.createElement(Menu, {\n    currentPath: location.pathname,\n    contents: data.allMdx.nodes.map(node => ({\n      title: node.frontmatter.title,\n      depth: node.fields.depth,\n      path: node.fields.path\n    }))\n  }), React.createElement(\"div\", {\n    ref: refDiv,\n    className: style.div,\n    onScroll: () => setScrolledToTopState(refDiv.current.scrollTop === 0)\n  }, React.createElement(\"div\", {\n    className: style.container\n  }, React.createElement(\"header\", {\n    className: style.articleHeader\n  }, React.createElement(\"h1\", null, article.frontmatter.title), React.createElement(\"h3\", null, article.fields.date)), article.tableOfContents.items ? React.createElement(\"ol\", {\n    className: style.tableOfContents\n  }, React.createElement(\"span\", null, getLanguage(location.pathname, languages).headline), (_article$tableOfConte = article.tableOfContents.items) === null || _article$tableOfConte === void 0 ? void 0 : _article$tableOfConte.map(_ref2 => {\n    let {title} = _ref2;\n    return React.createElement(\"li\", {\n      key: \"Heading_\" + title\n    }, React.createElement(Link, {\n      to: \"#\" + capitalizeFirstLetterOfEachWord(title),\n      className: style.link\n    }, title));\n  })) : React.createElement(React.Fragment, null), React.createElement(\"div\", {\n    className: style.articleContent\n  }, React.createElement(MDXProvider, {\n    components: {\n      pre: _ref3 => {\n        let {children} = _ref3;\n        return React.createElement(Code, null, children);\n      },\n      h1: _ref4 => {\n        let {children} = _ref4;\n        return React.createElement(Heading1, null, children);\n      }\n    }\n  }, children))), React.createElement(\"button\", {\n    className: style.buttonToTop,\n    disabled: isScrolledToTop,\n    onClick: () => {\n      navigate(location.pathname);\n      refDiv.current.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  }, React.createElement(StaticImage, {\n    className: style.image,\n    src: \"../../images/curvedArrow.png\",\n    alt: \"scroll to top icon\",\n    title: \"Scroll to top\",\n    loading: \"eager\",\n    __imageData: require(\"C:/Users/USER/Desktop/github/Blog/.cache/caches/gatsby-plugin-image/3711127795.json\")\n  }))));\n};\nArticleTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ArticleTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref5 => {\n  let {data, location} = _ref5;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    pathname: location.pathname\n  });\n};\nconst query = \"3582494129\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","ul","li","br","a","h2","_provideComponents","components","React","className","href","wrapper","MDXLayout","ArticleTemplate","_ref","_article$tableOfConte","data","location","children","languages","site","siteMetadata","mdx","article","refDiv","useRef","isScrolledToTop","setScrolledToTopState","useState","allMdx","nodes","findIndex","node","pathname","match","RegExp","fields","path","Layout","language","getLanguage","id","Menu","currentPath","contents","map","title","frontmatter","depth","ref","style","onScroll","current","scrollTop","date","tableOfContents","items","headline","_ref2","key","Link","to","capitalizeFirstLetterOfEachWord","MDXProvider","_ref3","Code","_ref4","Heading1","disabled","onClick","navigate","scrollTo","top","behavior","StaticImage","src","alt","loading","__imageData","require","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref5","SEO"],"sourceRoot":""}